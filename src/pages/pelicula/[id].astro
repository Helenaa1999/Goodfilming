---
//Objeto que contiene valores de segmentos de ruta dinámica que coincidan con esta petición
import Layout from '../../layouts/Layout.astro';
import {getVideos} from "../../lib/api/videos.js";
export const prerender = false;

const apiKey = import.meta.env.TMDB_API_KEY;

//Llamada a la api. Para conseguir utilizar esta función en todas las páginas, se ha añadido un array de categorías, el cual después se introducirá en la URL.
export async function getStaticPaths(){
    const categories= ['now_playing', 'popular', 'top-rated', 'upcoming'];
    const paths: { params: { id: any; }; }[]=[];
    for(const category of categories){
        const res= await fetch (`https://api.themoviedb.org/3/movie/${category}?api_key=${apiKey}c&language=es-ES`);
        const data = await res.json();
        const films = Array.isArray(data.results) ? data.results : [];
        films.forEach((film: { id: { toString: () => any; }; }) => {
            if(film.id){
                paths.push({
                params: {id: film.id.toString()}
                });
            }
        });
    };


    return paths;
}

const {id} = Astro.params;

const filmRes= await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=es-ES`);
const film = await filmRes.json();

const pageTitle = "Goodfilming -" + film.title;

const videoId = await getVideos(film.title);


//Sirve para mostrar la media de nota y solo tenga un decimal
const vote_average = film.vote_average;
let vote_averageParaMostrar = Math.round(vote_average*10)/10;


---

<Layout pageTitle={pageTitle}>
    <!--Estructura para mostrar el título de la película, sinopsis, imagen y nota -->
    <h1>{film.title}</h1>
    <div class="nowPlayingTextContainer">
        <img class="imgFilm" src={`https://image.tmdb.org/t/p/w200${film.poster_path}`} alt="{pelicula.title}">
        <div>
            <div class="synopsisContainer">
                <h4 class="heading">Sinopsis:</h4>
                <p class="overview">{film.overview}</p>
            </div>
            <div class="rating flex-col-center">
                <p>Nota media: </p>
                <p> ⭐ {vote_averageParaMostrar}<strong> / 10</strong></p>
            </div>
             <!--Añadir para que el usuario evalue y la media de valoraciones de goodfilming -->
        </div>
    </div>
        <!--Estructura para mostrar el trailer -->
        <h4 class="heading">Trailer:</h4>
        {videoId ? (
            <iframe class="trailer"
            width="700"
            height="400"
            src={`https://www.youtube.com/embed/${videoId}`}
            title={`Trailer de ${film.title}`}
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
            ></iframe>
        ) : (
            <p>No se encontró el trailer</p>
        )}
    </div>
</Layout>
<script>
    document.addEventListener('DOMContentLoaded', function(){
        var overview = document.querySelector(".overview");
        //En caso de que no haya una overview de la película, se mostrará este mensaje.
        if(overview && !overview?.textContent?.trim()){
            overview.textContent = "------------------------------------------------------ Sinopsis no disponible -----------------------------------------------------";
        }
    });
</script>

